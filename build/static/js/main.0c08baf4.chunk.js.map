{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Note.jsx","components/CreateArea.jsx","components/App.jsx","index.js"],"names":["Header","Footer","year","Date","getFullYear","Note","props","className","title","content","onClick","onDelete","id","CreateArea","useState","note","setNote","inputShow","rows","addShow","showTitle","expand","setExpand","handleChange","event","target","name","value","prevNote","style","display","onChange","placeholder","Zoom","in","Fab","onAdd","preventDefault","App","notes","setNotes","deleteNote","prevNotes","filter","noteItem","index","newNote","map","key","ReactDOM","render","document","getElementById"],"mappings":"kPAUeA,MARf,WACE,OACE,gCACE,wCCMSC,MATf,WACE,MAAMC,GAAO,IAAIC,MAAOC,cACxB,OACE,gCACE,+CAAgBF,K,iBCWPG,MAdf,SAAcC,GAKZ,OACE,yBAAKC,UAAU,QACb,4BAAKD,EAAME,OACX,2BAAIF,EAAMG,SACV,4BAAQC,QARZ,WACEJ,EAAMK,SAASL,EAAMM,MAOW,kBAAC,IAAD,S,yCC+DrBC,MAtEf,SAAoBP,GAAQ,MAAD,EACDQ,mBAAS,CAC/BN,MAAO,GACPC,QAAS,KAHc,mBAClBM,EADkB,KACZC,EADY,OAMGF,mBAAS,CACnCG,WAAW,EACXC,KAAM,EACNC,SAAS,EACTC,UAAW,SAVY,mBAMlBC,EANkB,KAMVC,EANU,KAczB,SAASC,EAAaC,GAAQ,MAAD,EACHA,EAAMC,OAAtBC,EADmB,EACnBA,KAAMC,EADa,EACbA,MAEdX,EAAQY,GACC,2BACFA,GADL,IAEE,CAACF,GAAOC,KA0Bd,OACE,6BACE,0BAAMpB,UAAU,eACd,2BACEsB,MAAO,CAAEC,QAAST,EAAOD,WACzBM,KAAK,QACLK,SAAUR,EACVI,MAAOZ,EAAKP,MACZwB,YAAY,UAEd,8BACEtB,QAvBR,WACEY,EACE,CACEL,WAAW,EACXC,KAAM,EACNC,SAAS,EACTC,UAAW,MAkBTM,KAAK,UACLK,SAAUR,EACVI,MAAOZ,EAAKN,QACZuB,YAAY,iBACZd,KAAMG,EAAOH,OAEf,kBAACe,EAAA,EAAD,CAAMC,GAAIb,EAAOF,SAAS,kBAACgB,EAAA,EAAD,CAAKzB,QAvCrC,SAAoBc,GAClBlB,EAAM8B,MAAMrB,GACZC,EAAQ,CACNR,MAAO,GACPC,QAAS,KAEXe,EAAMa,mBAiCkD,kBAAC,IAAD,WC1B7CC,MArCf,WAAgB,MAAD,EACaxB,mBAAS,IADtB,mBACNyB,EADM,KACCC,EADD,KASb,SAASC,EAAW7B,GAClB4B,EAASE,GACAA,EAAUC,OAAO,CAACC,EAAUC,IAC1BA,IAAUjC,IAKvB,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAYwB,MAjBhB,SAAiBU,GACfN,EAASE,GACA,IAAIA,EAAWI,OAgBrBP,EAAMQ,IAAI,CAACH,EAAUC,IAElB,kBAAC,EAAD,CACEG,IAAKH,EACLjC,GAAIiC,EACJrC,MAAOoC,EAASpC,MAChBC,QAASmC,EAASnC,QAClBE,SAAU8B,KAIhB,kBAAC,EAAD,QClCNQ,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.0c08baf4.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <header>\n      <h1>Keeper</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Footer() {\n  const year = new Date().getFullYear();\n  return (\n    <footer>\n      <p>Copyright â“’ {year}</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nfunction Note(props) {\n  function handleClick() {\n    props.onDelete(props.id);\n  }\n\n  return (\n    <div className=\"note\">\n      <h1>{props.title}</h1>\n      <p>{props.content}</p>\n      <button onClick={handleClick}><DeleteIcon /></button>\n    </div>\n  );\n}\n\nexport default Note;\n","import React, { useState } from \"react\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Zoom from '@material-ui/core/Zoom';\nimport Fab from '@material-ui/core/Fab';\n\nfunction CreateArea(props) {\n  const [note, setNote] = useState({\n    title: \"\",\n    content: \"\"\n  });\n\n  const [expand, setExpand] = useState({\n    inputShow: false,\n    rows: 1,\n    addShow: false,\n    showTitle: \"none\"\n\n  })\n\n  function handleChange(event) {\n    const { name, value } = event.target;\n\n    setNote(prevNote => {\n      return {\n        ...prevNote,\n        [name]: value\n      };\n    });\n  }\n\n  function submitNote(event) {\n    props.onAdd(note);\n    setNote({\n      title: \"\",\n      content: \"\"\n    });\n    event.preventDefault();\n  }\n\n  function expandAll(){\n    setExpand(\n      {\n        inputShow: true,\n        rows: 3,\n        addShow: true,\n        showTitle: \"\"\n    \n      }\n    )\n  }\n\n  return (\n    <div>\n      <form className=\"create-note\">\n        <input\n          style={{ display: expand.showTitle }}\n          name=\"title\"\n          onChange={handleChange}\n          value={note.title}\n          placeholder=\"Title\"\n        />\n        <textarea\n          onClick={expandAll}\n          name=\"content\"\n          onChange={handleChange}\n          value={note.content}\n          placeholder=\"Take a note...\"\n          rows={expand.rows}\n        />\n        <Zoom in={expand.addShow}><Fab onClick={submitNote}><AddIcon /></Fab></Zoom>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateArea;\n\n\n// You can just set a bool var and use ternary operator to update the rest","import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n\n  function addNote(newNote) {\n    setNotes(prevNotes => {\n      return [...prevNotes, newNote];\n    });\n  }\n\n  function deleteNote(id) {\n    setNotes(prevNotes => {\n      return prevNotes.filter((noteItem, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return (\n    <div>\n      <Header />\n      <CreateArea onAdd={addNote} />\n      {notes.map((noteItem, index) => {\n        return (\n          <Note\n            key={index}\n            id={index}\n            title={noteItem.title}\n            content={noteItem.content}\n            onDelete={deleteNote}\n          />\n        );\n      })}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}